{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","initialValues","questions","question","onSubmit","values","localStorage","setItem","JSON","stringify","console","log","parse","getItem","submit","handleChange","map","item","i","cn","id","name","value","onChange","placeholder","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"89BAmDeA,MA5Cf,WAQI,OAAQ,qBAAKC,UAAW,iBAAhB,SACA,qBAAKA,UAAW,YAAhB,SACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CACIC,cAAe,CAACC,UAAWA,EAAUA,UAAUC,UAC/CC,SAAW,SAAAC,GAAM,OAXxB,SAACA,GACVC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,IAC9CK,QAAQC,IAAIH,KAAKI,MAAMN,aAAaO,QAAQ,YASPC,CAAOT,IAFhC,SAGK,gBACKA,EADL,EACKA,OAAOU,EADZ,EACYA,aADZ,OAGD,eAAC,IAAD,WACKb,EAAUA,UAAUc,KAAI,SAACC,EAAMC,GAAP,OACrB,sBAAalB,UAAWmB,IAAG,aAAc,QAAzC,UACI,qBAAKnB,UAAW,iBAAhB,SACKiB,EAAKd,WAGV,cAAC,IAAD,CAAOH,UAAW,eACHoB,GAAIH,EAAKd,SAAUkB,KAAMJ,EAAKd,SACtCmB,MAAOjB,EAAOH,UACdqB,SAAUR,EACVS,YAAa,+EAHRN,KANNA,MAad,wBAAQlB,UAAW,eAAgByB,KAAK,SAAxC,+BC3BbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0184f5e9.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport questions from './questions.json'\nimport {Formik, Field, Form} from 'formik';\nimport cn from 'classnames';\n\n\nfunction App() {\n\n    let submit = (values) => {\n        localStorage.setItem('values', JSON.stringify(values));\n        console.log(JSON.parse(localStorage.getItem('values')))\n\n    }\n\n    return (<div className={\"outerContainer\"}>\n            <div className={\"container\"}>\n                <div className={\"form\"}>\n                    <Formik\n                        initialValues={{questions: questions.questions.question}}\n                        onSubmit={(values => submit(values))}>\n                        {({\n                              values,handleChange\n                          }) => (\n                        <Form>\n                            {questions.questions.map((item, i) => (\n                                <div key={i} className={cn(\"form__item\", \"item\")}>\n                                    <div className={\"item__question\"}>\n                                        {item.question}\n                                    </div>\n\n                                    <Field className={\"item__answer\"}\n                                           key={i} id={item.question} name={item.question}\n                                           value={values.questions}\n                                           onChange={handleChange}\n                                           placeholder={\" *Введите текст\"}/>\n                                </div>\n                            ))}\n\n                            <button className={\"form__button\"} type=\"submit\">SEND</button>\n                        </Form>\n                        )}\n                    </Formik>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}