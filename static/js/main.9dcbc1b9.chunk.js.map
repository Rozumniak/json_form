{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","answers","saveAnswers","answer","setAnswer","console","log","className","initialValues","questions","question","onSubmit","values","JSON","stringify","map","item","i","cn","onChange","e","currentTarget","value","id","name","placeholder","type","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w+BAuDeA,MAhDf,WAAgB,IAAD,EACoBC,mBAAS,IAD7B,mBACJC,EADI,KACKC,EADL,OAEiBF,mBAAS,KAF1B,mBAEJG,EAFI,KAEIC,EAFJ,KAaX,OAVAC,QAAQC,IAAIH,GAUJ,qBAAKI,UAAW,iBAAhB,SACA,qBAAKA,UAAW,YAAhB,SACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CACIC,cAAe,CAACC,UAAWA,EAAUA,UAAUC,UAC/CC,SAXP,SAACC,GACV,IAAIT,EAASU,KAAKC,UAAUF,EAAQ,KAAM,GAC1CV,EAAYC,GACZE,QAAQC,IAAIL,IAMA,SAGI,eAAC,IAAD,WACKQ,EAAUA,UAAUM,KAAI,SAACC,EAAMC,GAAP,OACrB,sBAAaV,UAAWW,IAAG,aAAc,QAAzC,UACI,qBAAKX,UAAW,iBAAhB,SACKS,EAAKN,WAGV,cAAC,IAAD,CAAOH,UAAW,eAAgBY,SAAU,SAACC,GAAD,OACvChB,EAAUgB,EAAEC,cAAcC,QAC7BA,MAAOnB,EACMoB,GAAIP,EAAKN,SAAUc,KAAMR,EAAKN,SACtCe,YAAa,+EADRR,KARNA,MAad,wBAAQV,UAAW,eAAgBmB,KAAK,SAAxC,kBACA,8BACI,wBAAQnB,UAAW,cAAeoB,QAhCnD,WACPC,MAAM3B,IA+BkB,iCC/BjB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9dcbc1b9.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport questions from './questions.json'\nimport {Formik, Field, Form} from 'formik';\nimport cn from 'classnames';\n\n\nfunction App() {\n    const [answers, saveAnswers] = useState({});\n    const [answer, setAnswer] = useState(\" \");\n    console.log(answer)\n    let show = () => {\n        alert(answers);\n    }\n    let submit = (values) => {\n        let answer = JSON.stringify(values, null, 2);\n        saveAnswers(answer);\n        console.log(answers);\n\n    }\n    return (<div className={\"outerContainer\"}>\n            <div className={\"container\"}>\n                <div className={\"form\"}>\n                    <Formik\n                        initialValues={{questions: questions.questions.question}}\n                        onSubmit={submit}>\n                        <Form>\n                            {questions.questions.map((item, i) => (\n                                <div key={i} className={cn(\"form__item\", \"item\")}>\n                                    <div className={\"item__question\"}>\n                                        {item.question}\n                                    </div>\n\n                                    <Field className={\"item__answer\"} onChange={(e)=>\n                                         setAnswer(e.currentTarget.value)\n                                    } value={answer}\n                                           key={i} id={item.question} name={item.question}\n                                           placeholder={\" *Введите текст\"}/>\n                                </div>\n                            ))}\n\n                            <button className={\"form__button\"} type=\"submit\">SEND</button>\n                            <div>\n                                <button className={\"form__check\"} onClick={show}>CHECK</button>\n                            </div>\n                        </Form>\n                    </Formik>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}